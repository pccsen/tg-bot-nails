from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from keyboards.inline import service_menu
from states.booking_state import BookingState

router = Router()

@router.message(F.text == "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è")
async def services_handler(message: types.Message):
    await message.answer(
        "üíá‚Äç‚ôÄÔ∏è –ù–∞—à–∏ —É—Å–ª—É–≥–∏:\n- –ú–∞–Ω–∏–∫—é—Ä\n- –†–µ—Å–Ω–∏—Ü—ã\n- –ë—Ä–æ–≤–∏\n\nüë©‚Äçüé® –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
        reply_markup=service_menu
    )

@router.callback_query(F.data.startswith("category_"))
async def handle_category(callback: types.CallbackQuery, state: FSMContext):
    category = callback.data.split("_")[1]
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    await state.update_data(category=category)

    # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —à–∞–≥—É –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
    await state.set_state(BookingState.name)

    await callback.message.answer(f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {category.capitalize()}\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
    await callback.answer()  # –û—Ç–≤–µ—Ç –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è

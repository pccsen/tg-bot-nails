from aiogram import Router, types
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery
from states.booking_state import BookingState
from keyboards.inline import time_keyboard, master_keyboard
from database.db import cursor, conn
from datetime import datetime

router = Router()

# –ù–∞—á–∞–ª–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ –≤—ã–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
@router.callback_query(lambda c: c.data.startswith("category_"))
async def start_booking(callback: CallbackQuery, state: FSMContext):
    category = callback.data.split("_")[1]
    await state.update_data(category=category)  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    await state.set_state(BookingState.name)
    await callback.message.answer(f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {category.capitalize()}\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")

# –í–≤–æ–¥ –∏–º–µ–Ω–∏
@router.message(BookingState.name)
async def booking_name(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(BookingState.phone)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")

# –í–≤–æ–¥ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
@router.message(BookingState.phone)
async def booking_phone(message: types.Message, state: FSMContext):
    await state.update_data(phone=message.text)
    await state.set_state(BookingState.date)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É (–î–î.–ú–ú.–ì–ì–ì–ì):")

# –í–≤–æ–¥ –¥–∞—Ç—ã
@router.message(BookingState.date)
async def booking_date(message: types.Message, state: FSMContext):
    try:
        datetime.strptime(message.text, "%d.%m.%Y")
        await state.update_data(date=message.text)
        await state.set_state(BookingState.time)
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è:", reply_markup=time_keyboard)
    except ValueError:
        await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì.")

# –í—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏
@router.callback_query(lambda c: c.data.startswith("time_"))
async def booking_time(callback: CallbackQuery, state: FSMContext):
    await state.update_data(time=callback.data.split("_")[1])
    await state.set_state(BookingState.master)
    await callback.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Å—Ç–µ—Ä–∞:", reply_markup=master_keyboard)

# –í—ã–±–æ—Ä –º–∞—Å—Ç–µ—Ä–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏
@router.callback_query(lambda c: c.data.startswith("master_"))
async def booking_master(callback: CallbackQuery, state: FSMContext):
    master = callback.data.split("_")[1]
    await state.update_data(master=master)
    data = await state.get_data()
    cursor.execute(
        "INSERT INTO appointments (user_id, name, phone, date, time, master) VALUES (?, ?, ?, ?, ?, ?)",
        (callback.from_user.id, data['name'], data['phone'], data['date'], data['time'], data['master'])
    )
    conn.commit()
    await callback.message.answer(
        f"–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã!\n\nüìÖ –î–∞—Ç–∞: {data['date']}\n‚è∞ –í—Ä–µ–º—è: {data['time']}\nüíá –ú–∞—Å—Ç–µ—Ä: {data['master']}"
    )
    await state.clear()
